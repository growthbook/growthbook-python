import asyncio

from aiohttp import payload_type

from growthbook import GrowthBookClient, Options, UserContext, Experiment, GrowthBook


def my_tracking_callback(experiment, result, user):
    print(f"üìä Tracking: {experiment.key}, variation={result.variationId}, user={user.attributes}")

async def main():
    gb = GrowthBook(
        attributes={"id": 1},
        trackingCallback=my_tracking_callback,
        api_host="https://6526d8a46e76.ngrok-free.app",
        client_key="sdk-HS7oAdaI8Yi4Bh"
    )
    gb.eval_feature()
    # 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è GrowthBook
    client = GrowthBookClient(
        Options(
            api_host="https://6526d8a46e76.ngrok-free.app",
            client_key="sdk-HS7oAdaI8Yi4Bh",
            # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π client key,
            remote_eval = True,
            global_attributes={"id": 1},
        )
    )

    try:
        # 2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ—ñ—á—ñ
        success = await client.initialize()
        if not success:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ GrowthBook –∫–ª—ñ—î–Ω—Ç")
            return
        print("‚úÖ GrowthBook –∫–ª—ñ—î–Ω—Ç –≥–æ—Ç–æ–≤–∏–π")

        # 3. –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = UserContext(
            attributes={
                "id": "user_123",
                "country": "US",
                "premium": True
            }
        )

        # 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–æ—Å—Ç—É —Ñ—ñ—á—É
        if await client.is_on("new-boolean-feature-september", user):
            print("üü¢ –ù–æ–≤–∞ –¥–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —É–≤—ñ–º–∫–Ω–µ–Ω–∞!")
        else:
            print("üî¥ –ù–æ–≤–∞ –¥–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–∏–º–∫–Ω–µ–Ω–∞!")

        # 5. –î—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ—á—ñ –∑ fallback
        color = await client.get_feature_value("new-boolean-feature-september", True, user)
        print(f"üé® –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏: {color}")

        # 6. –ó–∞–ø—É—Å–∫–∞—î–º–æ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
        experiment = Experiment(
            key="pricing-test",
            variations=["$9.99", "$14.99", "$19.99"]
        )

        result = await client.run(experiment, user)
        if result.inExperiment:
            print(f"üß™ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ñ: {result.value}")
        else:
            print("‚ö™ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∫–ª—é—á–µ–Ω–∏–π –≤ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç")

    finally:
        # 7. –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç
        await client.close()


if __name__ == "__main__":
    asyncio.run(main())
